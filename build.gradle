plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'io.freefair.lombok' version '6.5.1'
	id 'org.openapi.generator' version '6.2.1'
	id 'jacoco'
}

group = 'org.recipes'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

sourceSets {
	main {
		java {
			srcDir "${buildDir}/generated/src/main/java"
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	runtimeOnly 'org.postgresql:postgresql'

	// open api
	implementation 'org.openapitools:jackson-databind-nullable:0.2.4'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2'
	testImplementation 'org.mockito:mockito-core:4.8.1'
	testImplementation 'org.assertj:assertj-core:3.23.1'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/org/recipes/spec/**'])
		}))
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.90
			}
		}
	}
	afterEvaluate {
		classDirectories.setFrom(jacocoTestReport.classDirectories)
	}
}

openApiGenerate {
	generatorName = 'spring'
	inputSpec = "$rootDir/src/main/resources/static/recipes-api-spec.yaml".toString()
	outputDir = "$buildDir/generated".toString()

	apiPackage = 'org.recipes.spec.api'
	invokerPackage = 'org.recipes.spec.invoker'
	modelPackage = 'org.recipes.spec.model'
	modelNameSuffix = 'DTO'
	configOptions = [
			configPackage: 'org.recipes.app.infrastructure.openapi',
			dateLibrary: 'java8',
			interfaceOnly: 'true',
			skipDefaultInterface: 'true',
	]
}

compileJava.dependsOn tasks.openApiGenerate
