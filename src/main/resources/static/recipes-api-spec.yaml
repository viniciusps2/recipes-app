openapi: 3.0.1
info:
  title: recipe-api
  version: 0.0.1
servers:
  - url: http://localhost:8082/
paths:
  /recipes:
    get:
      tags:
        - recipes
      summary: searchRecipes
      operationId: searchRecipes
      parameters:
        - in: query
          name: recipeType
          schema:
            $ref: '#/components/schemas/RecipeType'
          description: The recipe type (e.g. VEGETARIAN, OR NON_VEGETARIAN)
        - in: query
          name: servings
          schema:
            type: integer
          description: The number of servings
        - in: query
          name: ingredientsIncludes
          schema:
            type: array
            items:
              type: string
          description: Contains text in the ingredients
        - in: query
          name: ingredientsExcludes
          schema:
            type: array
            items:
              type: string
          description: Contains text in the ingredients
        - in: query
          name: instructionsContains
          schema:
            type: string
          description: Contains text in the instructions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
    post:
      tags:
        - recipes
      summary: createRecipe
      operationId: createRecipe
      requestBody:
        description: recipe
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        400:
          description: Bad Request
        404:
          description: Not Found
  /recipes/{id}:
    get:
      tags:
        - recipes
      summary: getRecipe
      operationId: getRecipe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
    put:
      tags:
        - recipes
      summary: updateRecipe
      operationId: updateRecipe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: recipe
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recipe'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recipe'
        400:
          description: Bad Request
        404:
          description: Not Found
    delete:
      tags:
        - recipes
      summary: deleteRecipe
      operationId: deleteRecipe
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: No Content
        404:
          description: Not Found
  /ingredients:
    get:
      tags:
        - ingredients
      summary: listIngredients
      operationId: listIngredients
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
components:
  schemas:
    Recipe:
      title: Recipe
      required:
        - name
        - recipeType
        - servings
        - instructions
        - ingredients
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        recipeType:
          $ref: '#/components/schemas/RecipeType'
        servings:
          type: integer
        instructions:
          type: string
        ingredients:
          type: array
          items:
            $ref: '#/components/schemas/RecipeIngredient'

    RecipeIngredient:
      title: Recipe Ingredient
      required:
        - ingredient
      type: object
      properties:
        name:
          type: string
        quantity:
          type: number
        unitOfMeasure:
          $ref: '#/components/schemas/UnitOfMeasure'

    UnitOfMeasure:
      title: Unit of Measure
      type: string
      enum:
        - ITEM
        - CUPS
        - TEASPOON
        - GRAMS
        - MILLILITERS

    Ingredient:
      title: Ingredient
      required:
        - name
      type: object
      properties:
        name:
          type: string

    RecipeType:
      title: Recipe Type
      type: string
      enum:
        - NON_VEGETARIAN
        - VEGETARIAN
